name: Main Documentation and Storybook

on:
  push:
    branches:
      - rc
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-deps-${{ hashFiles('package-lock.json') }}

      - name: Setup packages
        run: |
          npm i
          npx lerna bootstrap

      - name: Get Plasma UI version
        id: get_ui_version
        if: github.event_name != 'pull_request'
        uses: ./.github/js-actions/getPackageVersion
        with:
          package-name: plasma-ui
      
      - name: Check UI's docs version existance
        id: is_ui_docs_version
        if: github.event_name != 'pull_request'
        uses: ./.github/js-actions/isDocsVersion
        with:
          package-name: plasma-ui-docs
          version: ${{ steps.get_ui_version.outputs.version }}

      - name: Create UI's docs version
        if: github.event_name != 'pull_request' && steps.is_ui_docs_version.outputs.docs_exists == 'false'
        run: npm run docusaurus docs:version ${version} --prefix="./website/plasma-ui-docs"
        env:
          version: ${{ steps.get_ui_version.outputs.version }}

      - name: Extract branch name
        if: github.event_name != 'pull_request' && steps.is_ui_docs_version.outputs.docs_exists == 'false'
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Commit & Push package-lock's
        if: github.event_name != 'pull_request' && steps.is_ui_docs_version.outputs.docs_exists == 'false'
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          message: 'chore: Create documentation version [skip ci]'
          branch: ${{ steps.extract_branch.outputs.branch }}
          author_name: SberDevices Frontend Team
          author_email: sberdevices.frontend@gmail.com

      - name: Lint
        run: npm run lint

      - name: Prepare directory
        run: mkdir ../build

      - name: Plasma Website
        run: |
          npm run build --prefix="./website/plasma-website"
          cp -R ./website/plasma-website/build ../build/next

      - name: Plasma UI Docs
        run: |
          npm run build --prefix="./website/plasma-ui-docs"
          cp -R ./website/plasma-ui-docs/build ../build/next/ui

      - name: Plasma Web Docs
        run: |
          npm run build --prefix="./website/plasma-web-docs"
          cp -R ./website/plasma-web-docs/build ../build/next/web

      - name: Plasma UI Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-ui"
          cp -R ./packages/plasma-ui/build-sb ../build/next/ui-storybook

      - name: Plasma Web Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-web"
          cp -R ./packages/plasma-web/build-sb ../build/next/web-storybook

      - name: Plasma B2C Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-b2c"
          cp -R ./packages/plasma-b2c/build-sb ../build/next/b2c-storybook

      - name: Upload documentation build
        uses: garygrossgarten/github-action-scp@release
        with:
          host: ${{ secrets.DOCS_HOST }}
          username: ${{ secrets.DOCS_LOGIN }}
          privateKey: ${{ secrets.DOCS_KEY }}
          local: "../build"
          remote: "/var/www/plasma"

      - name: Update and clean documentation
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOCS_HOST }}
          username: ${{ secrets.DOCS_LOGIN }}
          key: ${{ secrets.DOCS_KEY }}
          script: |
            cd ../../var/www/plasma
            rm -rf current/
            mv next current
